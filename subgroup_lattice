reverse:=function(list)
  local list_new,i,len;
  list_new:=[];
  len:=Size(list);
  for i in [0..len-1] do
    Add(list_new,list[len-i]);
  od;
  return list_new;
end;;

sub_lattice:=function(G)
  local list,i,subgroups,lattice;
  lattice:=[];
  subgroups:=sub(G);
  for i in subgroups do
    list:=[];
    Add(list,i);
    Add(list,MaximalSubgroups(i));
    Add(lattice,list);
  od;
   return reverse(lattice);
end;;

simplify:=function(list)
  local i,dictionary,G,count,j;
  count:=1;
  dictionary:=NewDictionary(1,true);
  for i in list do
    G:=list[i][1];
    if KnowsDictionary(dictionary,G) then
      list[i][1]=LookupDictionary(dictionary,G);
    else
      list[i][1]=[count,Size(G)];
      AddDictionary(dictionary,
    fi;
    for j in list[i][2] do
      G:=list[i][2][j];
      if KnowsDictionary(dictionary,G) then
      list[i][1]=LookupDictionary(dictionary,G);
      
      
    


  
  
  
